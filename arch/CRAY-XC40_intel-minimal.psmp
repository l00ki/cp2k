# Tested with: Intel(R) Fortran Intel(R) 64 Compiler for applications running on Intel(R) 64, Version 19.1.1.217 Build 20200306
# Author: Matthias Krack (matthias.krack@psi.ch, PSI, January 2021)

# Cray XC40 (Piz Daint, CSCS, multi-core partition)

# Program environments:
#  module add daint-mc
#  module rm PrgEnv-cray
#  module add PrgEnv-intel

CC        = cc
FC        = ftn
LD        = ftn
AR        = ar -r

CFLAGS    = -O3 -fopenmp -fp-model precise -funroll-loops -g -qopenmp-simd -traceback

DFLAGS    = -D__FFTW3
DFLAGS   += -D__MAX_CONTR=4
DFLAGS   += -D__MKL
DFLAGS   += -D__MPI_VERSION=3
DFLAGS   += -D__parallel
DFLAGS   += -D__SCALAPACK

FCFLAGS   = $(CFLAGS) $(DFLAGS)
FCFLAGS  += -diag-disable=8291
FCFLAGS  += -diag-disable=8293
FCFLAGS  += -fpp
FCFLAGS  += -free
FCFLAGS  += -I$(MKLROOT)/include
FCFLAGS  += -I$(MKLROOT)/include/fftw

LDFLAGS   = $(FCFLAGS) -static-intel
LDFLAGS_C = -nofor_main

MKL_LIB   = $(MKLROOT)/lib/intel64

LIBS      = $(MKL_LIB)/libmkl_scalapack_lp64.a
LIBS     += -Wl,--start-group
LIBS     += $(MKL_LIB)/libmkl_intel_lp64.a
LIBS     += $(MKL_LIB)/libmkl_sequential.a
LIBS     += $(MKL_LIB)/libmkl_core.a
LIBS     += $(MKL_LIB)/libmkl_blacs_intelmpi_lp64.a
LIBS     += -Wl,--end-group

# Required due to memory leak that occurs if high optimisations are used
mp2_optimize_ri_basis.o: mp2_optimize_ri_basis.F
	$(FC) -c $(subst O2,O0,$(FCFLAGS)) $<
